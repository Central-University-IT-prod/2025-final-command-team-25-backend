"""Добавить поле verification_level в таблицу users

Revision ID: b07934f78e11
Revises: ea9a945b8bd2
Create Date: 2025-03-03 02:01:14.305265

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from schemas.enums import SeatAccessLevel

# revision identifiers, used by Alembic.
revision: str = 'b07934f78e11'
down_revision: Union[str, None] = 'ea9a945b8bd2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:

    # Добавляем столбец с временной возможностью null
    op.add_column('users', sa.Column('verification_level', sa.Enum(SeatAccessLevel, name='seataccesslevel'), nullable=True))
    
    # Заполняем новое поле значением 'GUEST' для всех существующих записей
    op.execute("UPDATE users SET verification_level = 'GUEST' WHERE verification_level IS NULL")
    
    # Делаем поле обязательным (NOT NULL)
    op.alter_column('users', 'verification_level', nullable=False)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'access_level',
               existing_type=sa.Enum('GUEST', 'STUDENT', 'ADMIN', name='useraccesslevel'),
               type_=postgresql.ENUM('GUEST', 'STUDENT', 'ADMIN', name='user_status_enum'),
               existing_nullable=False)
    op.drop_column('users', 'verification_level')
    op.alter_column('seat_bookings', 'seat_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
